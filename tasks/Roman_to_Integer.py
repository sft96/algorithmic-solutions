# 13. Римские числа в целые числа.

# Римские цифры представлены семью различными символами  : I, V, X, L, C, D, и M

# Символ        Значение 
# I             1 
# V             5 
# X             10 
# L             50 
# C             100 
# D             500 
# M             1000

# Например, 2 записывается как II римская цифра, просто две единицы, сложенные вместе. 12 записывается как XII, что просто X + II. Число 27 записывается как XXVII, что XX + V + II.

# Римские цифры обычно пишутся от большего к меньшему слева направо. Однако цифра для четырех не IIII. Вместо этого число четыре записывается как IV. Поскольку единица стоит перед пятью, мы вычитаем ее, получая четыре. Тот же принцип применим к числу девять, которое записывается как IX. Существует шесть случаев, когда используется вычитание:

# I можно поместить перед V(5) и X(10), чтобы получить 4 и 9. 
# X можно поместить перед L(50) и C(100), чтобы получить 40 и 90. 
# C можно разместить перед D(500) и M(1000), чтобы получить 400 и 900.
# Данную римскую цифру преобразуйте в целое число.

 
# Пример 1:
# Вход: s = "III"
# Выход: 3
# Пояснение: III = 3.

# Пример 2:
# Вход: s = "LVIII"
# Выход: 58
# Пояснение: L = 50, V = 5, III = 3.

# Пример 3:
# Ввод: s = "MCMXCIV"
# Вывод: 1994
# Пояснение: M = 1000, CM = 900, XC = 90 и IV = 4.
 

# Ограничения:

# 1 <= s.length <= 15
# s содержит только символы ('I', 'V', 'X', 'L', 'C', 'D', 'M').
# Гарантируется, что s это допустимая римская цифра в диапазоне [1, 3999].


class Solution(object):
    def romanToInt(self, s):
        """
        :type s: str
        :rtype: int
        """
        roman_dict = {
            'I': '1,',
            'V': '5,',
            'X': '10,',
            'L': '50,',
            'C': '100,',
            'D': '500,',
            'M': '1000,',
        }
        roman_except = {
            'IV': '4,',
            'IX': '9,',
            'XL': '40,',
            'XC': '90,',
            'CD': '400,',
            'CM': '900,'
        }
        for old_str, new_str in roman_except.items():
            s = s.replace(old_str, new_str)
        for start_str, end_str in roman_dict.items():
            s = s.replace(start_str, end_str)
        result = s.split(',')
        while '' in result:
            result.remove('')
        total = [int(digit) for digit in result]
        return sum(total)


solution = Solution()
print(solution.romanToInt('III'))
